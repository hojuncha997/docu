JSP (Jakarta Server Pages)

구조적으로 본다면, jsp는 서블릿의 하이레벨 추상화 버전이다. JSP는 구동 중에는 서블릿으로 변환되기 때문에,
서블릿이라고 할 수 있다. 각 JSP 서블릿은 원본이 수정되기 전까지는 캐쉬되었다가 재사용된다.

자바 서버 페이지는 독립적으로 사용될 수 도 있다. 또한 서버 사이드의 MVC 디자인에서 view로 
사용될 수 있다. 이 때 javaBeans가 모델, 서블릿이 controller 역할을 한다. 이러한 유형을
model 2 아키텍쳐라고 한다.

jsp는 자바 코드를 허용하여 미리 지정된 액션을 HTML과 같은 정적인 컨텐츠와 병치할 수 있다.
이러한 결과로 만들어지는 페이지는 컴파일 되어 문서로 전달되기 위해 서버에서 구동된다. 컴파일 된 페이지는,
다른 종속적인 자바 라이브러리처럼, 기계어보다는 자바 바이트코드를 가지고 있다. 다른 모든 자바프로그램이나
.jar 처럼, 코드는 JVM 안에서 실행되어야 한다. 물론 이 jvm은 추상적이며 플랫폼에 구애받지 않는 환경을
제공하기 위해 서버의 OS와 상호작용하고 있어야 한다.

JSP는 대개 HTML 이나 XML 문서를 전달한다. 그러나 OutputStream을 사용하여 다양한 타입의 데이터를
전송할 수도 있다.

웹컨테이너는 request, response, session, application, config, page,
pageContext, out and exception과 같은 JSP implicit object를 생성한다.
JSP 엔진은 이러한 오브젝트들을 translation phase 동안 생성한다.


---

JSP compiler

JSP 컴파일러는 jsp를 파싱하여 실행가능한 자바 서블릿으로 변환하는 프로그램이다. 이러한 종류의 프로그램은
대개 어플리케이션 서버(WAS)에 내장돼 있으며 JSP가 처음 접근되면 자동으로 실행된다. 그러나 jsp는 성능, 또는
에러 테스트를 위해 빌드 프로세스의 과정을 위해 미리 컴파일 될 수도 있다.

 